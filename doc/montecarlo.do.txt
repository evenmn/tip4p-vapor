Monte Carlo (MC) simulations is an alternative to molecular dynamics simulations. Where molecular dynamics simulations actually solve the equation of motion and find time-averaged properties directly, Monte Carlo simulations utilize statistical mechanics in order to find time-averages. Where we in molecular dynamics simulations always are forced to perform physically accepted moves. In contrast, the Monte Carlo technique allows for 'unphysical' moves in configuration space. Such moves may correspond to transformations that only take place over very long times in MD simulations. cite{siepmannfrenkel}

We know that the time-average of a property $A$ is given by

!bt
\langle A\rangle_t = \frac{\int d\boldsymbol{r}^N\exp(-\beta E(\boldsymbol{r}^N))A(\boldsymbol{r}^N)}{\int d\boldsymbol{r}^N\exp(-\beta E(\boldsymbol{r}^N))},
!et

where $\boldsymbol{r}^N$ are the coordinates of the $N$ particles. The probability of finding the system in state associated with $\boldsymbol{r}^N$ is given by

!bt
P(\boldsymbol{r}^N)=\frac{\exp(-\beta E(\boldsymbol{r}^N))}{Z},
!et

with $Z$ as the partition function;

!bt
Z=\int d\boldsymbol{r}^N\exp(-\beta E(\boldsymbol{r}^N)).
!et

We can then rewrite $\langle A\rangle_t$ and approximate it with a (dense) sum:

!bt
\langle A\rangle_t=\int d\boldsymbol{r}^N P(\boldsymbol{r}^N)A(\boldsymbol{r}^N)\approx\frac{1}{M}\sum_{i=1}^M A(\boldsymbol{r}_i^N),
!et
where $M$ is the number of steps and the coordinates $\boldsymbol{r}_i^N$ are drawn from the probability distribution $P(\boldsymbol{r}_i^N)$. In Monte Carlo simulations, we sample over the coordinate space, which apparently will not give us a time-average. However, in general we assume the system to be ergodic, which makes the time-average properties equal to the spatial-average properties.

Here, we approach a potential problem: How do we compute $P(\boldsymbol{r}^N)$? Computing $Z$ is impossible even for relatively small systems, so we need to do something clever. Fortunately, Metropolis et al. discovered a work-around to this problem in the 1950's, where the relative probability is used instead of the absolute probability. The sampling technique, known as Metropolis sampling, is based on that a move follows *detailed balance*,

!bt
P(o)\pi(o\rightarrow n)=P(n)\pi(n\rightarrow o)
!et

where $o$ is an old state, $n$ is a new state, $P(i)$ is the probability of a state $i$ and $\pi(i\rightarrow j)$ is the probability of going from a state $i$ to a state $j$. Moreover, $\pi(o\rightarrow n)$ can be written as

!bt
\pi(o\rightarrow n)=\alpha(o\rightarrow n)\times\text{acc}(o\rightarrow n)
!et

where $\alpha(i\rightarrow j)$ is the transition matrix that determines the probability of performing a trial move from $i$ to $j$ and $\text{acc}(i\rightarrow j)$ is the probability of accepting a move from $i$ to $j$. In the original Metropolis scheme, the transition matrix is chosen to be symmetric such that $\alpha(i\rightarrow j)=\alpha(j\rightarrow i)$. In that case,

!bt
P(o)\times \text{acc}(o\rightarrow n)=P(n)\times\text{acc}(n\rightarrow o).
!et

We can then accept and reject proposed moves after the rule

!bt
\text{acc}(o\rightarrow n)=
\begin{cases}
P(n)/P(o) \qquad & \text{if}\quad P(n) < P(o) \\
1 \qquad & \text{if}\quad P(n) \geq P(o)
\end{cases}.
!et

More sophisticated Metropolis schemes exist, like the Metropolis-Hastings algorithm. It will not be covered here.

Yet, we have not discussed the possible Monte Carlo steps. For a system consisting of single (point) particles, the typical step is a translational move in a random direction and with a random length:

!bt
\boldsymbol{r}_{i}=\boldsymbol{r}_{i-1} + \Delta\boldsymbol{r}
!et

Usually, the step length is drawn from a normal distribution and the direction is chosen uniformly between the dimensions:

!bt
\Delta\boldsymbol{r}=\mathcal{N}(0, \sigma^2)\hat{i} + \mathcal{N}(0, \sigma^2)\hat{j} + \mathcal{N}(0, \sigma^2)\hat{k},
!et

with 0 as the mean step length and $\sigma$ as the standard deviation of the step length. By using the relation between kinetic energy and temperature, $\langle K\rangle=3k_BT/2$, we clearly see that $\sigma=T$, which means that the temperature is conserved in a standard Monte Carlo simulation. Additionally, the number of particles will be conserved and the volume is conserved if we add boundaries. Consequently, standard Monte Carlo simulations are performed in the canonical ensemble, NVT.

For more molecular systems, we might as well perform rotational steps,

!bt
\boldsymbol{\Omega}_{i}=\boldsymbol{\Omega}_{i-1} + \Delta\boldsymbol{\Omega},
!et

where $\Delta\boldsymbol{\Omega}$ is drawn from a uniform distribution,

!bt
\Delta\boldsymbol{\Omega} = \mathcal{U}(0, \theta_{\text{max}})\hat{\theta} + \mathcal{U}(0, \phi_{\text{max}})\hat{\phi}.
!et

Furtermore, there are possible to do more advanced steps, like swap particles, remove particles, add particles, increase or decrease the volume and so on. These moves will not necessary resemble the canonical ensemble, but might hold other quantities constant which may resemble other ensembles. In fact, more ensembles are available in Monte Carlo simulations compared to molecular dynamics simulations.
